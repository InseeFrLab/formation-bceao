---
title: 'Besoins techniques et organisationnels'
subtitle: |
  **[BCEAO - Jour 2]{.orange}**
author: "[Romain Avouac](https://github.com/avouacr), [Thomas Faria](https://github.com/ThomasFaria)"
date: "09/25/2023"
date-format: "D MMMM YYYY"
slide-number: true
lang: fr-FR
# for blind readers:
slide-tone: false
chalkboard: # press the B key to toggle chalkboard
  theme: whiteboard
# uncomment to use the multiplex mode:
# multiplex: true
format:
  onyxia-revealjs:
    incremental: true
    output-file: index.html
controls: true
css: ../custom.css
from: markdown+emoji
ascii: true
execute: 
  echo: false
  warning: false
---



# Introduction

## L'informatique dans le SSP

- Une ["communauté d'artisans"]{.orange}
  - Diversité des [**langages**]{.blue2} de programmation 
  - Diversité des [**environnements de travail**]{.blue2}

## Le poste de travail

::: {.incremental}
- [**Avantages**]{.orange} :
  - [**Simplicité**]{.blue2}

- [**Inconvénients**]{.orange} :
  - [**Puissance**]{.blue2} limitée
  - [**Reproductibilité**]{.blue2} limitée
  - [**Sécurité**]{.blue2} faible
:::

## Les infrastructures mutualisées traditionnelles

::: {.incremental}
- [**Avantages**]{.orange} :
  - [**Simplicité**]{.blue2}
  - [**Puissance**]{.blue2}
  - [**Sécurité**]{.blue2} des données
  - Couvre la [**majorité**]{.blue2} des usages

- [**Inconvénients**]{.orange} :
  - [**Reproductibilité**]{.blue2} faible
  - Difficultés à [**innover**]{.blue2}
:::

## L'enjeu de la reproductibilité

![](img/reprospectrum.png){height="200" fig-align="center"}

**Source** : Peng R., Reproducible Research in Computational Science, Science (2011)

## Donner les moyens d'innover

::: {.incremental}
- Fournir des [**ressources**]{.orange} adaptées aux [**nouveaux usages**]{.orange}
  - [**Stockage**]{.blue2} adapté aux données [**massives**]{.blue2} et [**non-structurées**]{.blue2}
  - Outils modernes de [**data science**]{.blue2} (R, Python, calcul distribué,...)
  - [**GPUs**]{.blue2} pour l'entraînement de modèles de [**machine learning**]{.blue2}

- Passer du développement à la [**mise en production**]{.orange}
  - Outils de [**déploiement**]{.blue2} et d'[**automatisation**]{.blue2}
:::

## Des besoins à différents niveaux

- [**Infrastructure**]{.orange}

- [**Outils informatiques**]{.orange}

- [**Changements organisationnels**]{.orange}



# Infrastructure

## Comment construire une *data stack* pertinente ?

- Répondre aux [**besoins**]{.orange} des statisticiens publics
  - [**Ressources**]{.blue2} (stockage, GPUs, services etc.) pour l'expérimentation
  - Favoriser la [**reproductibilité**]{.blue2} des traitements
  - Permettre la [**mise en production**]{.blue2}

- Choisir des technologies à l'[**état de l'art**]{.orange}
  - Faciliter l'[**adoption**]{.blue2} par les statisticiens

## Notre *data stack*

- [**Infrastructure cloud centralisée**]{.orange}

- [**Stockage objet**]{.orange}

- [**Conteneurisation**]{.orange}

- [**Plateforme**]{.orange} web de data science

## Infrastructure cloud

- Poste de travail comme point d'accès à une [**infrastructure centralisée**]{.orange} de calcul
  - [**Evolutivité**]{.blue2} (*scaling* horizontal)
  - [**Sécurité**]{.blue2} (pas de dissemination des données)

- [***On-premise***]{.orange} vs. [***full-cloud***]{.orange}
  - Maîtrise des [**coûts**]{.blue2}
  - [**Compétences**]{.blue2} de maintenance

## Stockage : le *data lake*

- Un stockage [**peu coûteux**]{.orange} fait pour des [**données**]{.orange}
  - [**volumineuses**]{.blue2}
  - [**brutes**]{.blue2}
  - issues de [**sources variées**]{.blue2}

. . .

![](img/datalake.png){height="400" fig-align="center"}

## Le choix du stockage objet

- Choix du [**stockage objet**]{.orange} (type [**S3**]{.orange}) vs. [**Hadoop**]{.orange}

- La [**co-localisation**]{.orange} des traitements n'est plus justifiée
  - Plus besoin de [**puissance/IA**]{.blue2} que de [***big storage***]{.blue2}
  - [**Découplage**]{.blue2} stockage/traitement -> [**évolutivité**]{.blue2}
  - Coûts de maintenance

. . .

![](img/minio.svg){height="300" fig-align="center"}

## Le choix de la conteneurisation

![](img/containers.png){height="250" fig-align="center"}

- [**Standard**]{.orange} pour la data science
  - [**autonomie**]{.blue2}
  - [**reproductibilité**]{.blue2}
  - [**scalabilité**]{.blue2}

- [**Orchestrateur**]{.orange} : [**Kubernetes**]{.blue2}

## Une plateforme de data science

- Les choix techniques ne suffisent pas
   - Les technologies *cloud* sont [**difficiles d'accès**]{.blue2}
   - Une [**interface web**]{.blue2} comme liant technique

. . .

![](img/bricks.png){height="400" fig-align="center"}

## SSP Cloud / Onyxia

- [SSP Cloud](https://datalab.sspcloud.fr/) : [**instance publique**]{.blue2} d'[**Onyxia**]{.orange}
  - Dédiée à l'[**expérimentation**]{.blue2} sur [**données ouvertes**]{.blue2}
  - Base des [**tutoriels**]{.blue2} de cette formation

- [Onyxia](https://www.onyxia.sh/) : une [**plateforme de data science**]{.blue2} moderne
  - Projet [**open-source**]{.blue2} : [https://github.com/InseeFrLab/onyxia-web](https://github.com/InseeFrLab/onyxia-web)
  - Possibilité de créer une [**instance interne**]{.blue2}




# Outils informatiques

## Motivation

- Une infrastructure adaptée au *big data* est nécessaire.. mais pas suffisante !

- Nécessité d'adapter les pratiques
  - Langages de programmation
  - Formats de données
  - Outils informatiques spécifiques

## Langages de programmation

![](img/skills.png)

[Source](https://towardsdatascience.com/most-in-demand-tech-skills-for-data-engineers-58f4c1ca25ab)

## Formats de données

- Deux formats très populaires :
  - [**CSV**]{.orange} : pour la [**plupart des usages courants**]{.blue2}
    - _Avantage_ : [**non-compressé**]{.blue2} donc facilement [**lisible**]{.blue2}
    - _Inconvénients_ : pas de gestion des méta-données, peu adapté aux données volumineuses
  - [**Parquet**]{.orange} : pour le traitement de [**données volumineuses**]{.blue2}
    - [**Compressé**]{.blue2} et très [**performant**]{.blue2} en lecture/écriture
    - Gestion native des méta-données ([**schéma**]{.blue2})

## Le format `Parquet` : compression

- schéma

## Le format `Parquet` : autres avantages

- open-source et interopérable
- "orienté colonne" -> performant pour l'analyse OLAP
- partionnement

## Traitement des données volumineuses

- `Parquet` ne résout pas tout
  - L'espace sur disque est optimisé
  - Les données décompressées doivent passer en mémoire

- Comment analyser 100 GB de données sur un PC avec 16 GB de RAM ?
  - Arrow
  - DuckDB

## Arrow

- 

## DuckDB

## Traitement des données massives

## Hadoop MapReduce

## Spark

## En résumé

- Utiliser un format de données adapté (`Parquet`)

- Utiliser des outils informatiques adaptés
  - Données volumineuses : calcul en mémoire optimisé  (`Arrow` / `DuckDB`)
  - Données massives : calcul distribué (`Spark`)

## Outils pour la mise en production

- Traitements automatisés (*workflows*)
  - `argo-workflow`

- Déploiement (*batch*, *workflow*, application)
  - `Kubernetes`
  - `ArgoCD`

## Catalogue de services d'Onyxia

![](img/catalog.png)



# Organisation et compétences

## Labs

- Insee : SSP Lab (innovation méthodo DS) + DIIT (innovation info data ingé / data architect)

## Organisation d'un projet

![](img/competences.png){height="600" fig-align="center"}

## Formation

- ENSAE / ENSAI
- Liens supports


# Conclusion

# 
